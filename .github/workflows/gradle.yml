name: Java CI with Gradle

on:
  pull_request:
    branches: [ "main" ]
  ##push:
    #branches: [ "main" ]


permissions:
  contents: read

env:
  S3_BUCKET_NAME: mainprojects4
  LIGHTSAIL_SSH_KEY: ${{ secrets.LIGHTSAIL_SSH_KEY }}
  LIGHTSAIL_HOST: ${{ secrets.LIGHTSAIL_HOST }}
  LIGHTSAIL_USERNAME: ${{ secrets.LIGHTSAIL_USERNAME }}
  
jobs:
  build:

    runs-on: ubuntu-latest
    env:
      working-directory: ./server

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Add permission
      run: chmod +x ./gradlew
      working-directory: ${{ env.working-directory }}
    - name: Build with Gradle
      run: ./gradlew clean build
      working-directory: ${{ env.working-directory }}
    
    - name: Check Build Files
      run: ls -la      

    # Access Key와 Secret Access Key를 통해 권한을 확인합니다.
    # 아래 코드에 Access Key와 Secret Key를 직접 작성하지 않습니다.
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려옵니다.
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려옵니다.
        aws-region: ap-northeast-2
    
    # AWS 인증이 완료되었는지 테스트합니다.
    - name: Connect AWS Lightsail
      run: aws configure list
    
    # 배포 자동화를 시작합니다.
    - name: CD
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{env.LIGHTSAIL_USERNAME}}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        source: ${{ env.working-directory }}
        target: ./

    - name: start java process background
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{env.LIGHTSAIL_USERNAME}}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: nohup java -jar ./server/build/libs/server-0.0.1-SNAPSHOT.jar > ./output.log 2>&1 &
        
    # script: nohup java -jar ./server/build/libs/server-0.0.1-SNAPSHOT.jar > nohup.out 2 > nohup.err < /dev/null &   
    
    - name: Check jar PID 
      run: ps -ef | grep jar    
        
        
        
